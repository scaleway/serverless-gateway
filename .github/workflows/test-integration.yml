name: tests with deployed gateway

on:
  push:
    branches: [main]

jobs:
  setup-fixtures:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-cli
        with:
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCW_SECRET_KEY }}
          project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}

      - name: Install npm dependencies
        run: npm install -g serverless serverless-scaleway-functions

      - name: Deploy function fixtures
        working-directory: gateway/endpoints
        run: serverless deploy

  setup-gateway:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-cli
        with:
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCW_SECRET_KEY }}
          project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}

      - uses: ./.github/actions/setup-poetry

      - name: Create gateway database
        working-directory: cli
        run: |
          poetry run scwgw create-db
          poetry run scwgw await-db

      - name: Create gateway namespace
        working-directory: cli
        run: |
          poetry run scwgw create-namespace
          poetry run scwgw await-namespace

      - name: Create gateway container
        working-directory: cli
        run: |
          poetry run scwgw create-containers
          poetry run scwgw await-containers

  run-tests:
    if: github.event.pull_request.draft == false
    needs:
      - setup-fixtures
      - setup-gateway
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-cli
        with:
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCW_SECRET_KEY }}
          project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}

      - uses: ./.github/actions/setup-poetry

      - name: Run integration tests
        working-directory: cli
        run: |
          poetry run scwgw remote-config
          poetry run pytest tests/integration
        env:
          DEPLOY_ENV: "scw"

  teardown-gateway:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    needs:
      - run-tests

    # Tolerate errors if no resources found to clean up
    continue-on-error: true

    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-cli
        with:
          access-key: ${{ secrets.SCW_ACCESS_KEY }}
          secret-key: ${{ secrets.SCW_SECRET_KEY }}
          project-id: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          organization-id: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}

      - uses: ./.github/actions/setup-poetry

      - name: Delete namespace
        working-directory: cli
        run: poetry run scwgw delete-namespace

      - name: Delete database
        working-directory: cli
        run: poetry run scwgw delete-db
